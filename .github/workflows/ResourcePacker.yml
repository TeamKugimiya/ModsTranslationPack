name: ResourcePacker

on:
  workflow_call:
    inputs:
      ref:
        required: false
        type: string
      matrix_version:
        required: true
        type: string
      release:
        required: true
        type: boolean
      release_version:
        required: false
        type: string
    secrets:
      AWS_S3_BUCKET:
        required: true
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      AWS_S3_ENDPOINT:
        required: true

jobs:
  ResourcePacker:
    name: ResourcePacker ${{ inputs.matrix_version }}
    runs-on: ubuntu-latest

    steps:
      - name: Checking Repository
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.ref }}
          fetch-depth: 0

      # Temporary fix, patched by AlexTMjugador
      - name: Install PackSquash
        run: |
          sudo mkdir -p /etc/apt/keyrings
          sudo wget -O /etc/apt/keyrings/packsquash.key https://deb.packages.packsquash.aylas.org/public.key
          echo 'deb [signed-by=/etc/apt/keyrings/packsquash.key] https://deb.packages.packsquash.aylas.org/debian stable main' | \
          sudo tee /etc/apt/sources.list.d/packsquash.list > /dev/null
          sudo apt-get update
          sudo apt-get install packsquash

      - name: Version Changer
        run: |
          if [ ${{ inputs.release }} = false ]; then
            echo "Beta Version..."
            .github/scripts/version_change.sh 1
            .github/scripts/version_change.sh 3 ${{ inputs.matrix_version }}
          elif [ ${{ inputs.release }} = true ]; then
            echo "Release Version..."
            .github/scripts/version_change.sh 2 ${{ inputs.release_version }}
            .github/scripts/version_change.sh 3 ${{ inputs.matrix_version }}
          else
            echo "Error! No value or parameter wrong."
          fi

      - name: Download override cache from s3
        if: github.event_name != 'pull_request'
        uses: Docker-Collection/docker-aws-s3-action@main
        with:
          aws_s3_bucket: ${{ secrets.AWS_S3_BUCKET }}
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws_s3_endpoint: ${{ secrets.AWS_S3_ENDPOINT }}
          dest_dir: "cache/"
          sync_reverse: true
          aws_command: "sync"

      - name: Extract caches
        if: github.event_name != 'pull_request'
        run: |
          sha256sum -c checksum.txt
          unzip Override-Cache.zip
          rm Override-Cache.zip

      - name: MultiVersions!
        run: |
          .github/scripts/multiversions.sh ${{ inputs.matrix_version }}

      # Temporary fix, patched by AlexTMjugador
      - name: Make ModsTranslationPack
        run: |
          packsquash <<'PACKSQUASH_OPTIONS'
          pack_directory = 'pack'
          never_store_squash_times = true
          ['assets/immersiveengineering/manual/zh_tw/*.txt']
          force_include = true
          ['{LICENSE,LICENSE_*}']
          force_include = true
          ['**/*?.lang']
          force_include = true
          PACKSQUASH_OPTIONS

      - name: Rename ModsTranslationPack
        run: |
          mv ./pack.zip ModsTranslationPack-${{ inputs.matrix_version }}.zip

      - name: Upload ModsTranslationPack
        uses: actions/upload-artifact@v3
        with:
          name: ModsTranslationPack-${{ inputs.matrix_version }}
          path: "*.zip"
