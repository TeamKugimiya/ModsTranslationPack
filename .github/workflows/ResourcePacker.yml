name: ResourcePacker

on:
  workflow_call:
    inputs:
      ref:
        required: false
        type: string
      matrix_version:
        required: true
        type: string
      release:
        required: true
        type: boolean
      release_version:
        required: false
        type: string
    secrets:
      AWS_S3_BUCKET:
        required: true
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      AWS_S3_ENDPOINT:
        required: true

jobs:
  ResourcePacker:
    name: ResourcePacker ${{ inputs.matrix_version }}
    runs-on: ubuntu-latest

    steps:
      - name: Checking Repository
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.ref }}
          fetch-depth: 0

      - name: Version Changer
        run: |
          if [ ${{ inputs.release }} = false ]; then
            echo "Beta Version..."
            .github/scripts/version_change.sh 1
            .github/scripts/version_change.sh 3 ${{ inputs.matrix_version }}
          elif [ ${{ inputs.release }} = true ]; then
            echo "Release Version..."
            .github/scripts/version_change.sh 2 ${{ inputs.release_version }}
            .github/scripts/version_change.sh 3 ${{ inputs.matrix_version }}
          else
            echo "Error! No value or parameter wrong."
          fi

      - name: Override mods
        run: .github/scripts/override_mods.sh

      - name: Download override cache from s3
        if: github.event_name != 'pull_request'
        uses: Docker-Collection/docker-aws-s3-action@main
        with:
          aws_s3_bucket: ${{ secrets.AWS_S3_BUCKET }}
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws_s3_endpoint: ${{ secrets.AWS_S3_ENDPOINT }}
          dest_dir: "Override-Cache.zip"
          aws_command: "cp"

      - name: Extract caches
        if: github.event_name != 'pull_request'
        run: |
          mv Override-Cache.zip MultiVersions/Override/
          cd MultiVersions/Override/
          unzip Override-Cache.zip
          mv assets/* main/
          rm -r assets
          rm Override-Cache.zip

      - name: MultiVersions!
        run: |
          .github/scripts/multiversions.sh ${{ inputs.matrix_version }}

      - name: Make ModsTranslationPack
        uses: ComunidadAylas/PackSquash-action@master
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          force_include_files: |
            LICENSE
            LICENSE_*
            assets/tconstruct/book/**/zh_tw/*.lang
            assets/immersiveengineering/manual/zh_tw/*.txt
          never_store_squash_times: true
          path: pack
          artifact_name: OptimizedPack-${{ inputs.matrix_version }}

      - name: DownloadArtifact
        uses: actions/download-artifact@v3
        with:
          name: OptimizedPack-${{ inputs.matrix_version }}
          path: ./

      - name: Delete Artifact
        uses: geekyeggo/delete-artifact@v2
        with:
          name: |
            OptimizedPack-${{ inputs.matrix_version }}

      - name: Rename ModsTranslationPack
        run: |
          mv ./pack.zip ModsTranslationPack-${{ inputs.matrix_version }}.zip

      - name: Upload ModsTranslationPack
        uses: actions/upload-artifact@v3
        with:
          name: ModsTranslationPack-${{ inputs.matrix_version }}
          path: "*.zip"
