name: Reusable | ResourcePacker

on:
  workflow_call:
    inputs:
      ref:
        required: false
        type: string
      matrix_version:
        required: true
        type: string
      release:
        required: true
        type: boolean
      release_version:
        required: false
        type: string
    secrets:
      AWS_S3_BUCKET:
        required: true
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      AWS_S3_ENDPOINT:
        required: true

jobs:
  image-resizer:
    name: Pack Image Resizer

    uses: ./.github/workflows/Reusable-ImageResize.yml
    with:
      matrix_version: ${{ inputs.matrix_version }}

  ResourcePacker:
    name: ResourcePacker ${{ inputs.matrix_version }}
    runs-on: ubuntu-latest
    needs: [ image-resizer ]

    steps:
      - name: Checking Repository
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install poetry
        uses: abatilo/actions-poetry@v2

      - name: Setup a local virtual environment
        run: |
          poetry config virtualenvs.create true --local
          poetry config virtualenvs.in-project true --local

      - name: Cache Python
        uses: actions/cache@v3
        with:
          path: ./.venv
          key: venv-${{ hashFiles('poetry.lock') }}

      - name: Install project dependencies
        run: poetry install

      - name: Pack mcmeta generate
        run: |
          python3 .github/scripts/mcmeta_generate.py
        env:
          release: ${{ inputs.release }}
          release_version: ${{ inputs.release_version }}
          matrix_version: ${{ inputs.matrix_version }}

      - name: Download override cache archive
        if: github.event_name != 'pull_request'
        uses: prewk/s3-cp-action@v2
        with:
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws_s3_endpoint: ${{ secrets.AWS_S3_ENDPOINT }}
          source: "s3://${{ secrets.AWS_S3_BUCKET }}/cache/Override-Cache.zip"
          dest: "./"

      - name: Download override cache checksum
        if: github.event_name != 'pull_request'
        uses: prewk/s3-cp-action@v2
        with:
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws_s3_endpoint: ${{ secrets.AWS_S3_ENDPOINT }}
          source: "s3://${{ secrets.AWS_S3_BUCKET }}/cache/checksum.txt"
          dest: "./"

      - name: Extract caches
        if: github.event_name != 'pull_request'
        run: |
          sha256sum -c checksum.txt
          unzip Override-Cache.zip
          rm Override-Cache.zip checksum.txt

      - name: MultiVersions mixer
        run: |
          poetry run python .github/scripts/multiversions.py
        env:
          matrix_version: ${{ inputs.matrix_version }}
          LOGURU_LEVEL: "INFO"

      - name: Copy misc things
        run: |
          cp MultiVersions/configs/pack.mcmeta pack/
          cp LICENSE pack/
          if [[ -d "MultiVersions/Override/" ]]; then
            cp MultiVersions/Override/LICENSE_* pack/
          fi

      - name: Apply Pack Icon
        uses: actions/download-artifact@v4
        with:
          name: PackIcon-${{ inputs.matrix_version }}
          path: pack/

      - name: Make ModsTranslationPack
        uses: ComunidadAylas/PackSquash-action@v4
        with:
          packsquash_version: latest-unstable
          options: |
            pack_directory = 'pack'
            never_store_squash_times = true
            ['assets/immersiveengineering/manual/zh_tw/*.txt']
            force_include = true
            ['{LICENSE,LICENSE_*}']
            force_include = true
            ['**/*?.lang']
            force_include = true
            ['**/*?.md']
            force_include = true
            ['assets/expatternprovider/ae2guide/pic/*?.png']
            force_include = true
          artifact_name: OptimizedPack-${{ inputs.matrix_version }}

      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: OptimizedPack-${{ inputs.matrix_version }}
          path: ./

      - name: Rename ModsTranslationPack
        run: |
          mv ./pack.zip ModsTranslationPack-${{ inputs.matrix_version }}.zip

      - name: Make Checksum
        run: |
          sha256sum ModsTranslationPack-${{ inputs.matrix_version }}.zip > checksum.txt

      - name: Upload ModsTranslationPack
        uses: actions/upload-artifact@v4
        with:
          name: ModsTranslationPack-${{ inputs.matrix_version }}
          path: |
            *.zip
            checksum.txt

  delete-artifact:
    name: Delete Artifact
    needs: [ ResourcePacker ]

    uses: ./.github/workflows/Reusable-DeleteArtifact.yml
    with:
      artifact_name: |
        OptimizedPack-${{ inputs.matrix_version }}
        PackIcon-${{ inputs.matrix_version }}
