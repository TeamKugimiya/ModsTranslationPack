name: CI | Pack - Release Please

on:
  push:
    branches:
    - "main"
  workflow_dispatch: {}

permissions:
  contents: write
  pull-requests: write

concurrency: 
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  json-formater:
    name: Json Formater
    runs-on: ubuntu-latest
    if: github.repository == 'xMikux/ModsTranslationPack'

    steps:
      - name: Checking Repository
        uses: actions/checkout@v4
      
      - name: Get Json
        id: get_json
        run: |
          echo "json_data=$(cat .github/configs/changelog-types.json | jq -r tostring)" >> "$GITHUB_OUTPUT"

    outputs:
      json_data: ${{ steps.get_json.outputs.json_data }}

  release-please:
    name: Release Please
    runs-on: ubuntu-latest
    needs: [ json-formater ]

    steps:
      - name: Checking Repository
        uses: actions/checkout@v4

      - name: Release Please
        id: release_please
        uses: google-github-actions/release-please-action@v4
        with:
          config-file: .github/configs/release-please-config.json

    outputs:
      release_created: ${{ steps.release_please.outputs.release_created }}
      tag_name: ${{ steps.release_please.outputs.tag_name }}

  matrix-setup:
    name: Setup Matrix
    if: ${{ needs.release-please.outputs.release_created }}
    needs: [ release-please ]
    uses: ./.github/workflows/Reusable-MatrixSetup.yml

  pack-release:
    name: Pack ${{ matrix.version }}
    if: ${{ needs.release-please.outputs.release_created }}
    needs: [ release-please, matrix-setup ]

    strategy:
      matrix: ${{ fromJson(needs.matrix-setup.outputs.matrix) }}

    uses: ./.github/workflows/Reusable-ResourcePacker.yml
    with:
      ref: ${{ needs.release-please.outputs.tag_name }}
      matrix_version: ${{ matrix.version }}
      release: true
      release_version: ${{ needs.release-please.outputs.tag_name }}
    secrets:
      AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_S3_ENDPOINT: ${{ secrets.AWS_S3_ENDPOINT }}

  summary:
    name: Generate Summary
    if: ${{ needs.release-please.outputs.release_created }}
    needs: [ pack-release ]

    uses: ./.github/workflows/Reusable-Summary.yml

  make-changelog:
    name: Make Changelog 
    runs-on: ubuntu-latest
    if: ${{ needs.release-please.outputs.release_created }}
    needs: [ release-please ]

    outputs:
      changelogs: ${{ steps.changelog.outputs.changelog }}

    steps:
      - name: Make Changelog
        id: changelog
        run: |
          Tags=${{ needs.release-please.outputs.tag_name }}
          {
            echo 'changelog<<EOF'
            curl https://api.github.com/repos/xMikux/ModsTranslationPack/releases/tags/$Tags -H "Accept: application/vnd.github+json" | jq -r .body
            echo EOF
          } >> "$GITHUB_OUTPUT"

  release-upload:
    name: Release Upload
    runs-on: ubuntu-latest
    if: ${{ needs.release-please.outputs.release_created }}
    needs: [ release-please ]
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Download All Artifact
        uses: actions/download-artifact@v3

      - name: Upload Release Artifact
        run: |
          for i in ModsTranslationPack-*
          do 
            cd "$i" || exit 1
            sha256sum -c checksum.txt
            gh release upload ${{ needs.release-please.outputs.tag_name }} $i.zip
            cd ..
          done

  modrinth-publish:
    name: Modrinth Release ${{ matrix.version }}
    needs: [ release-please, matrix-setup, make-changelog, summary ]

    strategy:
      max-parallel: 1
      matrix: ${{ fromJson(needs.matrix-setup.outputs.matrix) }}

    uses: ./.github/workflows/Reusable-ModrinthPublish.yml
    with:
      matrix_version: ${{ matrix.version }}
      changelog: | 
        ${{ needs.make-changelog.outputs.changelogs }}

        ---
        
        ${{ needs.summary.outputs.build_info }}
      release: true
      version: ${{ needs.release-please.outputs.tag_name }}
    secrets:
      MODRINTH_TOKEN: ${{ secrets.MODRINTH_TOKEN }}

  delete-artifact:
    name: Delete Artifact
    needs: [ modrinth-publish ]

    uses: ./.github/workflows/Reusable-DeleteArtifact.yml
    with:
      artifact_name: ModsTranslationPack-*
